variables:
  - group: ch9-variables

  - name: windowsImage
    value: windows-2019

  - name: macOSImage
    value: macos-10.15

  - name: linuxImage
    value: ubuntu-18.04

  - name: ApplicationOutputPath
    value: $(Build.ArtifactStagingDirectory)

  - name: PackageOutputPath
    value: $(Build.ArtifactStagingDirectory)

  - name: IsCanaryBranch
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')]

  - name: IsFeatureBranch
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/')]

  - name: IsReleaseBranch
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/RC/'))]

trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

stages:
- stage: Build

  jobs:
  - job: Windows

    pool:
      vmImage: $(windowsImage)

    strategy:
      matrix:
        Android:
          ApplicationConfiguration: Release_Android
          ApplicationPlatform: Any CPU
          BuildForPlayStore: False
          BuildNumberOffset: 400050
        Android_PlayStore:
          ApplicationConfiguration: Release_Android
          ApplicationPlatform: Any CPU
          BuildForPlayStore: True
          BuildNumberOffset: 400050
        UWP:
          ApplicationConfiguration: Release_UWP
          ApplicationPlatform: x64
          BuildNumberOffset: 50
      maxParallel: 3

    steps:
    - template: build/steps-build.yml

  - job: macOS

    pool:
      vmImage: $(macOSImage)

    strategy:
      matrix:
        iOS:
          ApplicationConfiguration: Release_iOS
          ApplicationPlatform: Any CPU
          BuildNumberOffset: 50
        macOS:
          ApplicationConfiguration: Release_MACOS
          ApplicationPlatform: Any CPU
          BuildNumberOffset: 50
      maxParallel: 2

    steps:
    - task: InstallAppleCertificate@2
      displayName: Install Certificate
      inputs:
        certSecureFile: nventive.p12
        certPwd: '$(AppleCertificatePassword)'
        deleteCert: true

    - task: InstallAppleProvisioningProfile@1
      displayName: Install Provisioning Profile
      inputs:
        provProfileSecureFile: Ch9.mobileprovision

    - template: build/steps-build.yml

  - job: Linux

    pool:
      vmImage: $(linuxImage)

    container: unoplatform/wasm-build:2.2

    variables:
      BuildNumberOffset: 50

    steps:
    - template: build/steps-build-wasm.yml

- ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')) }}:
  - stage: Release_AppCenter
    condition: and(succeeded(), or(eq(variables['IsReleaseBranch'], 'true'), eq(variables['IsFeatureBranch'], 'true')))
    dependsOn: Build
  
    jobs:
    - template: build/steps-release-appcenter.yml

- ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')) }}:
  - stage: Release_WASM
    condition: and(succeeded(), or(eq(variables['IsReleaseBranch'], 'true'), eq(variables['IsFeatureBranch'], 'true')))
    dependsOn: Build
  
    jobs:
    - template: build/steps-release-wasm.yml

- ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')) }}:
  - stage: Release_TestFlight
    condition: and(succeeded(), eq(variables['IsReleaseBranch'], 'true'))
    dependsOn: Build
  
    jobs:
    - template: build/steps-release-testflight.yml

- ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')) }}:
  - stage: Release_PlayStore
    condition: and(succeeded(), eq(variables['IsReleaseBranch'], 'true'))
    dependsOn: Build
  
    jobs:
    - template: build/steps-release-playstore.yml